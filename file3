#!/bin/bash

# Namespace
NAMESPACE="cobalt"

# Output file where all decoded certs will be stored
DECODED_CERT_FILE="cert10-base64d-bkp.txt"

# List of secret names
SECRETS=("ca-cert10" "ca-cert11" "ca-cert12")  # Add more as needed

# Clear the output file before appending
> "$DECODED_CERT_FILE"

# Iterate through the list of secrets
for SECRET in "${SECRETS[@]}"; do
    echo "Processing $SECRET..."

    # Extract the Base64-encoded certificate from the Kubernetes secret
    CERT_BASE64=$(kubectl get secret "$SECRET" -n "cobalt" -o jsonpath="{.data.$SECRET}")

    # Check if the secret contains a certificate
    if [[ -n "$CERT_BASE64" ]]; then
        echo "Decoding $SECRET..."

        # Decode the Base64 certificate and append it to the final file
        echo "$CERT_BASE64" | base64 -d >> "$DECODED_CERT_FILE"

        # Add a separator for readability
        echo -e "\n---\n" >> "$DECODED_CERT_FILE"
    else
        echo "Warning: No certificate found for $SECRET"
    fi
done

echo "Backup complete. Decoded certificates saved in $DECODED_CERT_FILE."
